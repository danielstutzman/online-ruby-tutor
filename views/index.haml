!!!html
%html
  %head
    / requirements for pytutor.js
    %script(src='/js/d3.v2.min.js')
    %script(src='/js/jquery-1.8.2.min.js')
    %script(src='/js/jquery.ba-bbq.min.js')
    %script(src='/js/jquery.jsPlumb-1.3.10-all-min.js')
    %script(src='/js/jquery-ui-1.8.24.custom.min.js')
    %script(src='/js/pytutor.js')
    %link(href='/css/pytutor.css' rel='stylesheet')

    / codemirror.net online code editor
    %script(src='/js/codemirror.js')
    %link(href='/css/codemirror.css' rel='stylesheet' type='text/css')
    %script(src='/js/codemirror-ruby.js')

    %script(src='/js/application.js')
    %link(href='/css/application.css' rel='stylesheet' type='text/css')
    %script
      - if @traces
        != "var traces_json = #{JSON.dump(@traces).inspect};"
      - if @word_to_method_indexes
        = "var word_to_method_indexes = {"
        - @word_to_method_indexes.each do |word, method_indexes|
          != "#{word.inspect}: #{method_indexes.inspect},"
        = "1: 1 };"
  %body
    %form(method='post')
      - if @exercise
        %b
          Exercise
          = "#{params['exercise_num']}:"
          = @exercise['description']
        %br
        %table#traces-table
          %tr.headers
            - if @exercise['cases'].first['given']
              %th Given

            - if @exercise['cases'].first['expected_return']
              %th Expected return
            - elsif @exercise['cases'].first['expected_stdout']
              %th Expected output

            - if @exercise['cases'].first['expected_return']
              %th Actual return
            - elsif @exercise['cases'].first['expected_stdout']
              %th Actual output

            %th Test passed?

            %th.action-buttons{ :rowspan => @exercise['cases'].size + 1 }
              %button#edit-button(style='height:100%') Edit code
              %button#run-button(style='height:100%') Run code

          - @exercise['cases'].each_with_index do |_case, i|
            %tr{ :'data-trace-num' => i }
              - if @exercise['cases'].first['given']
                %td
                  %code= (_case['given'] || {}).map { |var, val| "#{var} = #{val}" }.join(', ')

              - if @exercise['cases'].first['expected_return']
                %td
                  %code= _case['expected_return'].inspect
              - elsif @exercise['cases'].first['expected_stdout']
                %td
                  %pre= _case['expected_stdout']

              - if @exercise['cases'].first['expected_return']
                %td
                  %code= (@traces ? @traces[i]['returned'] : nil).inspect
              - elsif @exercise['cases'].first['expected_stdout']
                %td
                  %pre= @traces && @traces[i]['trace'].last['stdout']

              %td
                - if @traces
                  - if _case['expected_return']
                    - if @traces[i]['returned'] == _case['expected_return']
                      .passed PASSED
                    - else
                      .failed FAILED
                  - elsif _case['expected_stdout']
                    - if (@traces[i]['trace'].last['stdout'] || '').chomp == _case['expected_stdout'].to_s.chomp
                      .passed PASSED
                    - else
                      .failed FAILED

      - if @traces
        - @traces.each_with_index do |trace, i|
          %div.trace_render_div{ :id => "trace_render_div#{i}" }

      #user_code_div
        %textarea#user_code_textarea(name='user_code_textarea'
                                     cols='40' rows='20')
          = params["user_code_textarea"]
      - if @exercise.nil?
        %button#edit-button(style='height:100%') Edit code
        %button#run-button(style='height:100%') Run code

      %hr
      != haml :ruby_composer
